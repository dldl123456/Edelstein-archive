// <auto-generated />
using System;
using Edelstein.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Edelstein.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Edelstein.Database.Entities.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .HasMaxLength(128);

                    b.Property<string>("Username")
                        .HasMaxLength(13);

                    b.HasKey("ID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Edelstein.Database.Entities.Character", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("AP");

                    b.Property<int?>("AccountID");

                    b.Property<short>("DEX");

                    b.Property<int>("EXP");

                    b.Property<int>("Face");

                    b.Property<byte>("Gender");

                    b.Property<int>("HP");

                    b.Property<int>("Hair");

                    b.Property<short>("INT");

                    b.Property<short>("Job");

                    b.Property<short>("LUK");

                    b.Property<byte>("Level");

                    b.Property<int>("MP");

                    b.Property<int>("MaxHP");

                    b.Property<int>("MaxMP");

                    b.Property<int>("Money");

                    b.Property<string>("Name")
                        .HasMaxLength(13);

                    b.Property<short>("POP");

                    b.Property<short>("SP");

                    b.Property<short>("STR");

                    b.Property<byte>("Skin");

                    b.HasKey("ID");

                    b.HasIndex("AccountID");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Edelstein.Database.Entities.Character", b =>
                {
                    b.HasOne("Edelstein.Database.Entities.Account", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountID");
                });
#pragma warning restore 612, 618
        }
    }
}
